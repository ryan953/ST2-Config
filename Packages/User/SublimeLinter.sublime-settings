/*
    SublimeLinter default settings
*/
{
    /*
        The minimum delay in seconds (fractional seconds are okay) before
        a linter is run when the "sublimelinter" setting is true. This allows
        you to have background linting active, but defer the actual linting
        until you are idle. When this value is greater than the built in linting delay,
        errors are erased when the file is modified, since the assumption is
        you don't want to see errors while you type.
    */
    "sublimelinter_delay": 100,

    // If true, lines with errors or warnings will be filled in with the outline color.
    "sublimelinter_fill_outlines": false,

    // If true, lines with errors or warnings will have a gutter mark.
    "sublimelinter_gutter_marks": true,

    // If true, the find next/previous error commands will wrap.
    "sublimelinter_wrap_find": true,

    // If true, when the file is saved any errors will appear in a popup list
    "sublimelinter_popup_errors_on_save": false,

    // Javascript linter: "gjslint" to use the closure javascript linter (if available),
    // or either "jshint" or "jslint" to use a built in linter.
    "javascript_linter": "jshint",

    // jshint: options for linting JavaScript. See http://jshint.com/#docs for more info.
    // By deault, eval is allowed.
    "jshint_options":
    {
        "trailing": true,
        "asi": false,

        "forin": true,
        "latedef": true,
        "newcap": true,
        "noarg": true,
        "nonew": true,
        "strict": true,

        // Grumpy rules
        "undef": true, // No accidental global variables.
        "unused": true, //Defined but never used variables.
        "curly": true, // Always require braces
        "bitwise": false, // No bitwise operators
        
        // Global variables that are allowed.
        // Include most vendor libraries
        "predef": ["$", "_"],
        
        // Enable environment globals
        "browser": true,
        "jquery": true,
        "devel": false // Enabled alert(), confirm, and console.:w
    },

    // A list of pep8 error numbers to ignore. By default "line too long" errors are ignored.
    // The list of error codes is in this file: https://github.com/jcrocholl/pep8/blob/master/pep8.py.
    // Search for "Ennn:", where nnn is a 3-digit number.
    "pep8_ignore":
    [
        "E501",
        "E302"
    ]
}
